// Точная степень двойки
// Дано натуральное число N.
// Выведите слово YES, если число N является точной степенью двойки, или слово NO в противном случае.
// Операцией возведения в степень пользоваться нельзя!

// універсальна функція для ступенів всіх чисел
let isDegreeOfnumber = (num, degree) => {
    num = num / degree
    if (num == 1) {
        console.log('yes')
    };
    if (num < 1) {
        console.log('no')
    };
    if (num > 1) {
        isDegreeOfnumber(num, degree)
    };
};
isDegreeOfnumber(9765625, 5);
// --------------------------------------------------------------------------

// Цифры числа справа налево
// Дано натуральное число N.
// Выведите все его цифры по одной, в обратном порядке, разделяя их пробелами или новыми строками.
// При решении этой задачи нельзя использовать строки, списки, массивы (ну и циклы, разумеется).
// Разрешена только рекурсия и целочисленная арифметика.
let num = 123456789;
let result = ''
let reverseNum = num => {
    let lastnum = num % 10;
    num = Math.floor(num / 10);
    result = result.concat(lastnum);
    if (num > 0) {
        result = result.concat('-')
        reverseNum(num)
    }
};
reverseNum(num);
console.log(result)
console.log('------------------------------------------------------------------------');
//-----------------------------------------------------------------------------------------

// Вывести нечетные числа последовательности
// Дана последовательность натуральных чисел (одно число в строке), завершающаяся числом 0. 
// Выведите все нечетные числа из этой последовательности, сохраняя их порядок.
// В этой задаче нельзя использовать глобальные переменные и передавать какие-либо параметры в 
// рекурсивную функцию. Функция получает данные, считывая их с клавиатуры. 
// Функция не возвращает значение, а сразу же выводит результат на экран.
let oddNumbers = () => {
    let number = +prompt("enter number, '0' - will stop the action ")
    if (number != 0) {
        if (number % 2 != 0) {
            console.log(number);
        };
        oddNumbers();
    } else {
        return
    };
};
oddNumbers();
console.log('------------------------------------------');
// -----------------------------------------------------------------------------------------------

// Заданная сумма цифр
// Даны натуральные числа k и s. Определите, сколько существует k-значных натуральных чисел, 
// сумма цифр которых равна s. Запись натурального числа не может начинаться с цифры 0.
// В этой задаче можно использовать цикл для перебора всех цифр, стоящих на какой-либо позиции.
let findNumbers = (k, s) => {
    let startNumber = 1;
    let endNumber = 1;
    let count = 0;
    let numbers = [];
    for (i = 0; i < k; i++) {
        endNumber = endNumber * 10;
    };
    for (i = 0; i < k - 1; i++) {
        startNumber = startNumber * 10;
    };
    let sumOfNumbers = num => {
        let sum = 0;
        let calculation = num => {
            let lastCharakter = num % 10;
            num = Math.floor(num / 10);
            sum += lastCharakter;
            if (num >= 1) {
                calculation(num);
            };
        };
        calculation(num);
        return sum;
    };
    for (i = startNumber; i < endNumber; i++) {
        if (sumOfNumbers(i) === s) {
            count += 1;
            numbers.push(i);
        };
    };
    console.log(`серед усіх можливих ${k}-значних чисел лише у ${count} числах сума цифр дорівнює ${s}`);
    console.log(`ось ці числа: ${numbers}`);
};
findNumbers(3, 15);
console.log('---------------------------------');
// -----------------------------------------------------------------------------------------